"""
Django settings for onspotservice project.

Generated by 'django-admin startproject' using Django 2.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
import datetime

# # Configure the JWTs to expire after 1 hour, and allow users to refresh near-expiration tokens
# JWT_AUTH = {
#     'JWT_EXPIRATION_DELTA': datetime.timedelta(hours=1),
#     'JWT_ALLOW_REFRESH': True,
# }

# Make JWT Auth the default authentication mechanism for Django
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        #'rest_framework.permissions.IsAuthenticatedOrReadOnly',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        #'rest_framework_jwt.authentication.JSONWebTokenAuthentication',
         'rest_framework.authentication.SessionAuthentication',
        # 'rest_framework.authentication.BasicAuthentication',
    ),
}

ACCOUNT_LOGOUT_ON_GET = True

# Ask old password while changing it
OLD_PASSWORD_FIELD_ENABLED = True

# Keeps user logged in after changing the password
LOGOUT_ON_PASSWORD_CHANGE = False

# Email ka hai kuchh to bhi
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

# Enables django-rest-au    th to use JWT tokens instead of regular tokens.
#REST_USE_JWT = True

#for registration purpose
SITE_ID = 1

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+p5*)+ikm-3%4zq$8q(wbz4qxaoy=6g4ya0&vzpiakutu^#b%f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['0.0.0.0', 'localhost', '127.0.0.1', 'shrouded-cliffs-62043.herokuapp.com','*']

# REST_AUTH_SERIALIZERS = {
#     'USER_DETAILS_SERIALIZER': 'userside.serializers.UserSerializer'
# }

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    ##
    'userside',
    'rest_framework.authtoken',
    'rest_auth',
    'allauth',
    'allauth.account',
    'rest_auth.registration',
    'django.contrib.sites',
    'rest_framework',
    'django.contrib.gis',
    'leaflet',
    'rest_framework_gis',
    'multiselectfield',
]

MIDDLEWARE = [
    # Simplified static file serving.
    # https://warehouse.python.org/project/whitenoise/
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    #'corsheaders.middleware.CorsPostCsrfMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.BrokenLinkEmailsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

#CSRF_COOKIE_NAME = "XCSRF-TOKEN"

#CORS_ORIGIN_ALLOW_ALL = True

# CORS_ORIGIN_WHITELIST = (
#     'https://shrouded-cliffs-62043.herokuapp.com'
#     '192.168.42.77:19002'
#     'exp://192.168.42.77:19000'
#     'localhost:8000',
#     '127.0.0.1:9000'
# )
#
# CORS_ALLOW_HEADERS = (
#     'x-requested-with',
#     'content-type',
#     'accept',
#     'origin',
#     'authorization',
#     'x-csrftoken',
#     'Api-Authorization',
# )
#
# CORS_ALLOW_METHODS = (
#     'DELETE',
#     'GET',
#     'OPTIONS',
#     'PATCH',
#     'POST',
#     'PUT',
# )
#
# CORS_ALLOW_CREDENTIALS = True

#GDAL_LIBRARY_PATH = 'C:\\ROSHAN KADU\\AppData\\Local\\Programs\\Python\\Python36\\Lib\\site-packages\\osgeo\\gdal203.dll'
#GDAL_LIBRARY_PATH = r"C:\\Program Files\\GDAL"

GEOPOSITION_GOOGLE_MAPS_API_KEY = 'AIzaSyAnQl7fB9VExCz-wnb2qowUt09kXx04iXc'
#
# GEOPOSITION_MAP_OPTIONS = {
#     'minZoom': 3,
#     'maxZoom': 15,
# }

LEAFLET_CONFIG = {
    #'DEFAULT_CENTER': (6.0, 45.0),
    #'DEFAULT_ZOOM': 16,
    # 'MIN_ZOOM': 3,
    # 'MAX_ZOOM': 18,
}
ROOT_URLCONF = 'onspotservice.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'onspotservice.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'd10hn9ccfrum92',
        'USER': 'twbblvnmwaokjv',
        'PASSWORD': '02d64a8b9d7c099f69c49c9ed8c4067ed6d4ae43c26bee8cde779726adb0b216',
        'HOST': 'ec2-54-163-234-99.compute-1.amazonaws.com',
        'PORT': '5432',
    }
    # 'default': {
    #     'ENGINE': 'django.contrib.gis.db.backends.postgis',
    #     'NAME': 'onspotservice',
    #     'USER': 'onspotservice',
    #     'PASSWORD': 'onspotservice',
    #     'HOST': 'localhost',
    #     'PORT': '5432',
    # }
}


# Password validation
# https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.0/howto/static-files/
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

PROJECT_ROOT = os.path.dirname(os.path.abspath(__file__))

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/
STATIC_ROOT = os.path.join(PROJECT_ROOT, 'staticfiles')

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

STATIC_URL = '/static/'
